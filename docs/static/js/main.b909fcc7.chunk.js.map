{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifsHelper.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategory","useState","categoryName","setcategoryName","onSubmit","e","preventDefault","trim","length","cats","value","onChange","target","type","placeholder","GifGridItem","title","url","imgs","className","src","alt","getGifs","category","a","fetch","encodeURI","request","json","data","gifs","map","c","id","images","original","console","err","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","img","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMA+BeA,EA5BK,YAA4B,IAAhBC,EAAe,EAAfA,YAAe,EACLC,mBAAS,IADJ,mBACtCC,EADsC,KACxBC,EADwB,KAa7C,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAaK,OAAOC,QAAU,IAElCR,GAAY,SAACS,GAAD,OAAWP,GAAX,mBAA4BO,OACxCN,EAAgB,MAIhB,SACE,uBACEO,MAAOR,EACPS,SAfe,SAACN,GACpBF,EAAgBE,EAAEO,OAAOF,QAerBG,KAAK,OACLC,YAAY,mC,OCpBPC,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAaC,EAAU,EAAhBC,KACnC,OACE,sBAAKC,UAAU,6CAAf,UACE,4BAAIH,IACJ,qBAAKI,IAAKH,EAAKI,IAAKL,Q,uBCNbM,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,+EAEGC,MAAM,0CAAD,OACiBC,UACxCH,GAFuB,uDAFR,cAEbI,EAFa,gBAOIA,EAAQC,OAPZ,uBAOXC,EAPW,EAOXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,cAAQ,CAC5BC,GAAID,EAAEC,GACNjB,MAAOgB,EAAEhB,MACTE,MAAM,UAAAc,EAAEE,cAAF,mBAAUC,gBAAV,eAAoBlB,MAAO,OAXhB,kBAaZa,GAbY,yCAenBM,QAAQC,IAAR,MAfmB,kBAgBZ,IAhBY,0DAAH,sDCIPC,EAAU,SAAC,GAA2B,IAAD,IAAxBf,gBAAwB,MAAb,OAAa,ICDtB,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC4B,KAAM,GACNU,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACzB,GAAD,OACrBuB,EAAS,CACPZ,KAAMX,EACNqB,SAAS,SAGZ,CAAChB,IAEGiB,EDb2BI,CAAarB,GAAjCW,EADkC,EACxCL,KAAcU,EAD0B,EAC1BA,QAEtB,OACE,qCACE,6BAAKhB,IACJgB,GAAW,2CACZ,qBAAKpB,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACc,GAAD,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBC,IAAKD,EAAIZ,eES1Bc,EAlBM,WACnB,IADyB,EAEO9C,mBADb,CAAC,cADK,mBAElBsB,EAFkB,KAERvB,EAFQ,KAIzB,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,6BACGuB,EAASQ,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAAiBT,SAAUS,GAAbA,Y,MCVxBgB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.b909fcc7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = function ({ setCategory }) {\r\n  const [categoryName, setcategoryName] = useState('');\r\n  const handleChange = (e) => {\r\n    setcategoryName(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (categoryName.trim().length <= 2) return;\r\n\r\n    setCategory((cats) => [categoryName, ...cats]);\r\n    setcategoryName('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={categoryName}\r\n        onChange={handleChange}\r\n        type='text'\r\n        placeholder='Insert a new  category name'\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nCategoryAdd.propTypes = {\r\n  setCategory: PropTypes.func.isRequired,\r\n};\r\nexport default CategoryAdd;\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, imgs: url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeInDown'>\r\n      <p>{title}</p>\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  try {\r\n    const request = await fetch(\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n      )}&limit=10&api_key=F4SP2EaugaLHanmgsJ69hKG5nafBUSrQ`\r\n    );\r\n    const { data } = await request.json();\r\n    const gifs = data.map((c) => ({\r\n      id: c.id,\r\n      title: c.title,\r\n      imgs: c.images?.original?.url || '',\r\n    }));\r\n    return gifs;\r\n  } catch (err) {\r\n    console.err(err);\r\n    return [];\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category = 'goku' }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className='card-grid'>\r\n        {images.map((img) => (\r\n          <GifGridItem {...img} key={img.id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifsHelper';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const categories = ['One Punch'];\r\n  const [category, setCategory] = useState(categories);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <CategoryAdd setCategory={setCategory} />\r\n      <ol>\r\n        {category.map((c) => (\r\n          <GifGrid key={c} category={c} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n"],"sourceRoot":""}